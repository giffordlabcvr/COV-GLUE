run file glue/covInitProject.glue

project cov

  run script glue/covLoadTimeStamp.js
  run script glue/covSetLineageVersion.js
 
  # Clean up sequences from non-version-controlled single fastas which were produced
  # by splitGisaidFasta.sh into and save in single fastas in sources/cov-gisaid, also 
  # save sequence character stats file in tabular.
  # run script glue/covGisaidFastaInitialCleanup.js
  
  # import cov-gisaid individual fastas.
  import source sources_minimal/cov-gisaid

  # features, master reference, feature locations.
  run file glue/covFeatures.glue
  run file glue/covMasterReference.glue
  run script glue/covCheckFeatureLocations.js

  # various other bits of sequence data and metadata
  run script glue/covSetSequenceLengths.js 

  # dummy unconstrained alignment just contains master ref, required in a few
  # situations 
  create alignment AL_UNCONSTRAINED_DUMMY
  alignment AL_UNCONSTRAINED_DUMMY add member cov-gisaid EPI_ISL_402125
  alignment AL_UNCONSTRAINED_DUMMY member cov-gisaid EPI_ISL_402125 add segment 1 29903 1 29903

  # various metadata-related steps.
  # have to temporarily change result format to avoid bug in table rendering library.
  # console set cmd-result-format tab
   module covGisaidRefsMetadataTextFilePopulator populate --fileName tabular/gisaidLineageRepresentatives.tsv
  # module covGisaidMetadataTextFilePopulator populate --fileName tabular/gisaid_metadata.txt
  # module covSeqStatsTextFilePopulator populate -f tabular/gisaidSeqCharacterStats.txt
  # console unset cmd-result-format
  
  run script glue/covSetCollectionDate.js
  run script glue/covSetAuthorsShort.js


  # populate the constrained alignment (GISAID only)
  create alignment AL_GISAID_CONSTRAINED -r REF_MASTER_WUHAN_HU_1 
  alignment AL_GISAID_CONSTRAINED add member -w "source.name = 'cov-gisaid'"
  compute alignment AL_GISAID_CONSTRAINED covMafftAligner
  
  # now this has been populated we can count the unique SNPs (GISAID ONLY)
  run script glue/covCountUniqueSNPs.js

  # now this has been populated we set the CSR coverage
  run script glue/covSetCsrCoverage.js

  # build the unconstrained alignment, global ref tree, and other 
  # stuff for assigning lineages.
  run file glue/covRebuildGlobalRefs.glue

  # run the rules to exclude some sequences from the variation analysis
  # run file glue/covSetAnalyseVariationFlag.glue

  # count and store the number of sequences retrieved and which pass exclusion criteria
  # run script glue/covCountGisaidRetrievedAndIncluded.js

  # populate from cache where possible
  run script glue/covPopulateFromCache.js

  # assign and store lineages for all sequences where analyse_variation is true
  # and lineage has not been retrieved from cache.
  run script glue/covAssignAndStoreLineages.js

  # Validate
  validate

exit
