apply plugin: 'pl.allegro.tech.build.axion-release'
apply plugin: 'org.hidetake.ssh'

project.ext.set("glueVersion", "1.1.101")

ssh.settings { knownHosts = allowAnyHosts }

project.version = scmVersion.version

repositories {
	mavenLocal()
	mavenCentral()
}

configurations {
	gluetoolsCore
}

dependencies {
    gluetoolsCore group: 'cvr.ac.uk', name: 'gluetools-core', version: project.glueVersion, transitive: false
}


buildscript {
  repositories {
    // for ssh-deploy stuff, cargo
    jcenter()
    // for axion-release
    mavenCentral()
  }
  dependencies {
    classpath group: 'org.hidetake', name: 'gradle-ssh-plugin', version: '1.1.3'
    classpath group: 'commons-io', name: 'commons-io', version: '1.3.2'
    classpath group: 'pl.allegro.tech.build', name: 'axion-release-plugin', version: '1.9.3'
  }
}


task copyGluetoolsJar(type: Copy) {
    from configurations.gluetoolsCore
    into "$buildDir/runtimeJars"
    rename('gluetools-core-'+project.glueVersion+'.jar', 'gluetools-core.jar')
}

def glueConfigFile = System.getProperty("user.name").equals('joshsinger') ? 'local-gluetools-config.xml' : 'remote-gluetools-config.xml'

task wipeCovGlueDB(type: Exec) {
	commandLine "bash", "-c", "echo 'drop database COV_GLUE; create database COV_GLUE character set UTF8;' | mysql -u covglue --password=covglue"
}

task buildCovGlueDB(type: JavaExec, dependsOn: 'copyGluetoolsJar') {
	classpath "build/runtimeJars/gluetools-core.jar"
	main 'uk.ac.gla.cvr.gluetools.core.console.Console'
	jvmArgs '-Xmx7000m'
	args '-c', 'remote-gluetools-config.xml', '-i', 'run', 'file', 'covProject.glue'
}


def scmCustomKey = '/Users/joshsinger/.ssh/github_id_rsa'

scmVersion {
	hooks {
        pre 'fileUpdate', [file: 'glue/covProjectSettings.glue', pattern: {v, c -> /set setting project-version $v/}, replacement: {v, c -> "set setting project-version $v"}]
  
		pre 'commit', {v, p -> "Release version $v"}
    }

    scmVersion {
        versionCreator 'versionWithBranch'
	    repository {
	        customKey = file(scmCustomKey)
	    }
	    tag {
	        prefix = 'COV-GLUE'
	    }
    }

}
