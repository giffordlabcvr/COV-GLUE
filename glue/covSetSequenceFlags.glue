  #####################################################################################
  ##                   Rules for inclusion in reference tree                         ##
  #####################################################################################

  # all sequences included in the reference tree by default
  multi-set field sequence -a include_in_ref_tree true

  # non complete genomes (length < 29000) excluded from the reference tree
  multi-set field sequence -w "length < 29000" include_in_ref_tree false

  # GISAID sequences where host_species != "Human" excluded from the reference tree except
  multi-set field sequence -w "(host_species = null or !(host_species = 'Human'))" include_in_ref_tree false

  # exclude Shenzhen/SZTH-001 Shenzhen/SZTH-004 following NextStrain and various virological.org posts which. 
  # think they have sequencing errors (e.g. http://virological.org/t/phylodynamic-analysis-129-genomes-24-feb-2020/356/4)
  multi-set field sequence -w "sequenceID in ('EPI_ISL_406592', 'EPI_ISL_406595')" include_in_ref_tree false

  # exclude sequences with "warn" status on GISAID, this implies quality issues, usually multiple or long runs of NNNs
  multi-set field sequence -w "status_code = 'warn'" include_in_ref_tree false

  # exclude EPI_ISL_410545 (Vero E6 cell line of Italian isolate INMI1) in favour of directly sequenced clinical sample EPI_ISL_410546
  sequence cov-gisaid EPI_ISL_410545 set field include_in_ref_tree false

  # exclude EPI_ISL_410720 (Vero E6 cell line of French isolate IDF0372) in favour of directly sequenced clinical sample EPI_ISL_406596
  sequence cov-gisaid EPI_ISL_410720 set field include_in_ref_tree false

  # exclude EPI_ISL_410984 (Vero E6 cell line of French isolate IDF0515) in favour of directly sequenced clinical sample EPI_ISL_408430
  sequence cov-gisaid EPI_ISL_410984 set field include_in_ref_tree false

  # analyse aa changes only in ref tree sequences
  multi-set field sequence -w "include_in_ref_tree = true" analyse_aa_replacements true
  multi-set field sequence -w "include_in_ref_tree = true" analyse_aa_deletions true
  multi-set field sequence -w "include_in_ref_tree = true" analyse_aa_insertions true

  # These explicit rules retained as comments for historical interest
  # exclusion is now done here programmatically using covDetectImplausibleIndels.js
  # If implausible indels are detected, sequence is excluded from all 3 forms of analysis
  # replacements, deletions and insertions. 
  #####################################################################################
  ##                   Rules for inclusion in deletion analysis                     ##
  #####################################################################################
  # sequence has various implausible non-codon-aligned deletions
  # sequence cov-gisaid EPI_ISL_413752 set field analyse_aa_deletions false
  # sequence has implausible non-codon-aligned deletion in nsp3
  # sequence cov-gisaid EPI_ISL_414014 set field analyse_aa_deletions false
  # sequence has implausible non-codon-aligned deletion in nsp3
  # sequence cov-gisaid EPI_ISL_414017 set field analyse_aa_deletions false
  #####################################################################################
  ##                   Rules for inclusion in insertion analysis                     ##
  #####################################################################################
  # sequence has massive gap in nsp3 and an implausible frameshifting insertion in nsp4
  # sequence cov-gisaid EPI_ISL_412900 set field analyse_aa_insertions false
  # sequence has non-codon aligned deletion of a T in a long string of Ts around codon 35 of NSP6, ref nt 11073 
  # sequence cov-gisaid EPI_ISL_413485 set field analyse_aa_insertions false
  # sequence has implausible frameshifting insertion in ORF1a
  # sequence cov-gisaid EPI_ISL_408483 set field analyse_aa_insertions false
  # sequence has implausible frameshifting insertion in ORF1a
  # sequence cov-gisaid EPI_ISL_408487 set field analyse_aa_insertions false
  # sequences have large problematic run of Ns in ORF 1ab which is being interpreted as an insertion (possibly a GLUE bug) 
  # sequence cov-gisaid EPI_ISL_413578 set field analyse_aa_insertions false
  # sequence cov-gisaid EPI_ISL_413581 set field analyse_aa_insertions false
  # sequence cov-gisaid EPI_ISL_413586 set field analyse_aa_insertions false
  # sequence cov-gisaid EPI_ISL_413564 set field analyse_aa_insertions false
  # sequence cov-gisaid EPI_ISL_413568 set field analyse_aa_insertions false
  # sequence cov-gisaid EPI_ISL_414432 set field analyse_aa_insertions false
  # sequence cov-gisaid EPI_ISL_414458 set field analyse_aa_insertions false
  # sequence cov-gisaid EPI_ISL_414459 set field analyse_aa_insertions false
  # sequence cov-gisaid EPI_ISL_414462 set field analyse_aa_insertions false
  #####################################################################################

  # detect implausible insertions / deletions and set flags accordingly
  run script glue/covDetectImplausibleIndels.js
  
  # filter out some sequences from ref tree using CD-HIT-EST 
  run script glue/covFilterRefTreeCdHitEst.js

  
  