  # project build step that focuses on loading the sequence data and applying any quality filters to it.

  run script glue/covLoadTimeStamp.js

  # Import sequences
  module covGisaidFastaImporter import -f sequences/gisaid_cov2020_sequences.fasta

  # Sequence lengths
  run script glue/covSetSequenceLengths.js 
 
  # Metadata
  # have to temporarily change result format to avoid bug in table rendering library.
  console set cmd-result-format tab
  module covGisaidAcknowledgementsTextFilePopulator populate --fileName tabular/gisaid_cov2020_acknowledgement_table.txt
  module covGisaidMetadataTextFilePopulator populate --fileName tabular/gisaid_metadata.txt
  console unset cmd-result-format

  # deals with case where FASTA is ahead of either metadata (submission_year = null) or acknowledgements (isolate = null).
  # in this case we just remove these sequences.
  # the reverse case is dealt with by skipMissing flags in the TextFilePopulators.
  delete sequence -w "source.name = 'cov-gisaid' and (submission_year = null or isolate = null)"

  # all sequences included in the reference tree by default
  multi-set field sequence -a include_in_ref_tree true

  # non complete genomes (length < 29000) excluded from the reference tree
  multi-set field sequence -w "length < 29000" include_in_ref_tree false

  # GISAID sequences where host_species != "Human" excluded from the reference tree except
  multi-set field sequence -w "(host_species = null or !(host_species = 'Human'))" include_in_ref_tree false

  # exclude Shenzhen/SZTH-001 Shenzhen/SZTH-004 following NextStrain and various virological.org posts which. 
  # think they have sequencing errors (e.g. http://virological.org/t/phylodynamic-analysis-129-genomes-24-feb-2020/356/4)
  multi-set field sequence -w "sequenceID in ('EPI_ISL_406592', 'EPI_ISL_406595')" include_in_ref_tree false

  # exclude sequences with "warn" status on GISAID, this implies quality issues, usually multiple or long runs of NNNs
  multi-set field sequence -w "status_code = 'warn'" include_in_ref_tree false

  # sequence has massive gap in nsp3 and an implausible frameshifting insertion in nsp4
  sequence cov-gisaid EPI_ISL_412900 set field include_in_ref_tree false

  # sequence has non-codon aligned deletion of a T in a long string of Ts around codon 35 of NSP6, ref nt 11073 
  sequence cov-gisaid EPI_ISL_413485 set field include_in_ref_tree false
  
  # sequence has various implausible non-codon-aligned deletions
  sequence cov-gisaid EPI_ISL_413752 set field include_in_ref_tree false
  
  # sequence has implausible non-codon-aligned deletion in nsp3
  sequence cov-gisaid EPI_ISL_414014 set field include_in_ref_tree false

  # sequence has implausible non-codon-aligned deletion in nsp3
  sequence cov-gisaid EPI_ISL_414017 set field include_in_ref_tree false

  # sequence has implausible frameshifting insertion in ORF1a
  sequence cov-gisaid EPI_ISL_408483 set field include_in_ref_tree false

  # sequence has implausible frameshifting insertion in ORF1a
  sequence cov-gisaid EPI_ISL_408487 set field include_in_ref_tree false

  # exclude EPI_ISL_410545 (Vero E6 cell line of Italian isolate INMI1) in favour of directly sequenced clinical sample EPI_ISL_410546
  sequence cov-gisaid EPI_ISL_410545 set field include_in_ref_tree false

  # exclude EPI_ISL_410720 (Vero E6 cell line of French isolate IDF0372) in favour of directly sequenced clinical sample EPI_ISL_406596
  sequence cov-gisaid EPI_ISL_410720 set field include_in_ref_tree false

  # exclude EPI_ISL_410984 (Vero E6 cell line of French isolate IDF0515) in favour of directly sequenced clinical sample EPI_ISL_408430
  sequence cov-gisaid EPI_ISL_410984 set field include_in_ref_tree false
 
  # sequence has large problematic run of Ns in ORF 1ab which is being interpreted as an insertion (possibly a GLUE bug) 
  sequence cov-gisaid EPI_ISL_413578 set field include_in_ref_tree false

  # sequence has large problematic run of Ns in ORF 1ab which is being interpreted as an insertion (possibly a GLUE bug) 
  sequence cov-gisaid EPI_ISL_413581 set field include_in_ref_tree false

  # sequence has large problematic run of Ns in ORF 1ab which is being interpreted as an insertion (possibly a GLUE bug) 
  sequence cov-gisaid EPI_ISL_413586 set field include_in_ref_tree false

  # analyse aa changes only in ref tree sequences
  multi-set field sequence -a analyse_aa_replacements false
  multi-set field sequence -a analyse_aa_deletions false
  multi-set field sequence -a analyse_aa_insertions false
  multi-set field sequence -w "include_in_ref_tree = true" analyse_aa_replacements true
  multi-set field sequence -w "include_in_ref_tree = true" analyse_aa_deletions true
  multi-set field sequence -w "include_in_ref_tree = true" analyse_aa_insertions true


  run file glue/covFeatures.glue

  run file glue/covMasterReference.glue
  run script glue/covCheckFeatureLocations.js
