delete project cov

create project cov "A GLUE project for Coronavirus (cov)" --minVersion 1.1.80

run file glue/covSchemaExtensions.glue
 
project cov

  run file glue/covProjectSettings.glue
  run file glue/covModules.glue

  # M49 country extension
  run file glue/m49_countries/populateM49All.glue
  
  # Import sequences
  module covGisaidFastaImporter import -f sequences/gisaid_cov2020_sequences.fasta
 
  # Metadata
  # have to temporarily change result format to avoid bug in table rendering library.
  console set cmd-result-format tab
  module covGisaidMetadataTextFilePopulator populate --fileName tabular/gisaid_metadata.txt 
  console unset cmd-result-format

  # delete the 2013 bat sequence. Thought it might be useful for outgroup rooting but we're just going to use midpoint rooting for now
  delete sequence -w "sequenceID = 'EPI_ISL_402131'"

  # delete the environmental sequences
  delete sequence -w "isolate like '%HB-env%'"

  # delete the pangolin sequences
  delete sequence -w "isolate like '%pangolin%'"

  # delete Shenzhen/SZTH-001 Shenzhen/SZTH-004 following NextStrain and various virological.org posts which. 
  # think they have sequencing errors (e.g. http://virological.org/t/phylodynamic-analysis-129-genomes-24-feb-2020/356/4)
  # These are on long branches which mucks up midpoint rooting.
  delete sequence -w "sequenceID = 'EPI_ISL_406592'"
  delete sequence -w "sequenceID = 'EPI_ISL_406595'"

  # delete the following full length human sequences, 
  # that have known quality issues mentioned on GISAID
  delete sequence -w "sequenceID = 'EPI_ISL_408487'"
  delete sequence -w "sequenceID = 'EPI_ISL_408485'"
  delete sequence -w "sequenceID = 'EPI_ISL_408483'"
  delete sequence -w "sequenceID = 'EPI_ISL_408978'"
  delete sequence -w "sequenceID = 'EPI_ISL_412971'"
  delete sequence -w "sequenceID = 'EPI_ISL_406799'"
  delete sequence -w "sequenceID = 'EPI_ISL_412964'"
  delete sequence -w "sequenceID = 'EPI_ISL_412900'"

  # Sequence lengths
  run script glue/covSetSequenceLengths.js 

  # delete subgenomic.
  delete sequence -w "length < 24000"

  run file glue/covFeatures.glue

  run file glue/covMasterReference.glue
  run script glue/covCheckFeatureLocations.js

  # Unconstrained alignment
  module covSimpleFastaAlignmentImporter import AL_GISAID_UNCONSTRAINED -f alignments/AL_GISAID_UNCONSTRAINED.fna 

  # there are deletions which MAFFT did not properly codon-align 
  # nsp15:227:del in EPI_ISL_408670. 
  # nsp1:82-86:del in EPI_ISL_410044
  # for these sequences we will do a codon-aware constrained alignment then derive segments back to the unconstrained alignment.
  alignment AL_GISAID_UNCONSTRAINED
    member cov-gisaid EPI_ISL_408670 remove segment -a
    member cov-gisaid EPI_ISL_410044 remove segment -a
    exit

  create alignment AL_GISAID_CONSTRAINED -r REF_MASTER_WUHAN_HU_1 
  alignment AL_GISAID_CONSTRAINED 
    add member cov-gisaid EPI_ISL_408670
    add member cov-gisaid EPI_ISL_410044
    exit

  compute alignment AL_GISAID_CONSTRAINED covCompoundAligner

  alignment AL_GISAID_UNCONSTRAINED
    derive segments AL_GISAID_CONSTRAINED -w "sequence.sequenceID = 'EPI_ISL_408670'"
    derive segments AL_GISAID_CONSTRAINED -w "sequence.sequenceID = 'EPI_ISL_410044'"
    exit

  # generate replacements
  run script glue/covGenerateGisaidReplacements.js

  # generate deletions
  # if non-codon-aligned deletions are detected at this step, an error is thrown
  run script glue/covGenerateGisaidDeletions.js

  # insertion detection
  # if any insertions in coding regions are detected at this step, an error is thrown
  run script glue/covDetectGisaidInsertions.js

  # import phylogeny (outgroup removed)
  module covPhyloImporter
    import phylogeny AL_GISAID_UNCONSTRAINED -a -i trees/gisaidMidpointRooted.tree NEWICK_BOOTSTRAPS -f phylogeny
    exit

  # Validate
  validate

exit
