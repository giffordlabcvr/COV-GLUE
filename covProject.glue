run file glue/covInitProject.glue

project cov

  run script glue/covLoadTimeStamp.js
 
  # Clean up sequences from non-version-controlled single fastas which were produced
  # by splitGisaidFasta.sh into and save in single fastas in sources/cov-gisaid, also 
  # save sequence character stats file in tabular.
  run script glue/covGisaidFastaInitialCleanup.js
  
  # import cov-gisaid individual fastas.
  import source sources/cov-gisaid

  # features, master reference, feature locations.
  run file glue/covFeatures.glue
  run file glue/covMasterReference.glue
  run script glue/covCheckFeatureLocations.js

  # various other bits of sequence data and metadata
  run script glue/covSetSequenceLengths.js 

  # dummy unconstrained alignment just contains master ref, required in a few
  # situations 
  create alignment AL_UNCONSTRAINED_DUMMY
  alignment AL_UNCONSTRAINED_DUMMY add member cov-gisaid EPI_ISL_402125
  alignment AL_UNCONSTRAINED_DUMMY member cov-gisaid EPI_ISL_402125 add segment 1 29903 1 29903


  # have to temporarily change result format to avoid bug in table rendering library.
  console set cmd-result-format tab
  module covGisaidAcknowledgementsTextFilePopulator populate --fileName tabular/gisaid_cov2020_acknowledgement_table.txt
  module covGisaidMetadataTextFilePopulator populate --fileName tabular/gisaid_metadata.txt
  module covSeqStatsTextFilePopulator populate -f tabular/gisaidSeqCharacterStats.txt
  
  console unset cmd-result-format

  # deals with case where FASTA is ahead of either GISAID metadata (submission_year = null) or 
  # GISAID acknowledgements (isolate = null).
  # in this case we just remove these sequences.
  # the reverse case is dealt with by skipMissing flags in the TextFilePopulators above.
  delete sequence -w "source.name = 'cov-gisaid' and (submission_year = null or isolate = null)"

  # populate the constrained alignment.
  create alignment AL_GISAID_CONSTRAINED -r REF_MASTER_WUHAN_HU_1 
  alignment AL_GISAID_CONSTRAINED add member -a
  compute alignment AL_GISAID_CONSTRAINED covMafftAligner
  
  # now this has been populated we can count the unique SNPs
  run script glue/covCountUniqueSNPs.js

  # build the unconstrained alignment, global ref tree, and other 
  # stuff for assigning lineages.
  run file glue/covRebuildGlobalRefs.glue

  # assign and store lineages for all sequences.
  run script glue/covAssignAndStoreLineages.js

  # load the primer/probe data
  run script glue/covLoadPrimerProbes.js
  
  # run the rules to exclude some sequences from the variation analysis
  run file glue/covSetAnalyseVariationFlag.glue
  
  # generate deletions
  run script glue/covGenerateGisaidDeletions.js

  # generate replacements
  run script glue/covGenerateGisaidReplacements.js

  # generate insertions
  run script glue/covGenerateGisaidInsertions.js

  run file glue/covSanitisedExports.glue

  # Validate
  validate

exit
